
export const useFFmpeg = () => {
    const ffmpeg = new FFmpeg();
    ffmpeg.whenReady(async () => {
        await ffmpeg.exec(['-help']);
    });
}



const readFile = async (file: File) => {
    return new Promise<Blob | undefined>((resolve) => {
        // setting up the reader
        const reader = new FileReader();
        reader.readAsArrayBuffer(file);

        // read file
        reader.onload = readerEvent => {
            const content = readerEvent?.target?.result;
            if (!content || typeof content == "string") {
                resolve(undefined);
            } else {
                resolve(new Blob([new Uint8Array(content)], { type: file.type }));
            }
        }
    })
}

const downloadData = (file: Uint8Array, filename: string) => {
    // Create link and download
    const a = document.createElement('a');
    document.head.appendChild(a);
    a.download = filename
    a.href = URL.createObjectURL(
        new Blob([file])
    )
    a.click();
}
